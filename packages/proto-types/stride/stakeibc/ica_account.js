"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v3.21.3
// source: stride/stakeibc/ica_account.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.iCAAccountTypeToJSON = exports.iCAAccountTypeFromJSON = exports.ICAAccountType = exports.protobufPackage = void 0;
/* eslint-disable */
exports.protobufPackage = "stride.stakeibc";
var ICAAccountType;
(function (ICAAccountType) {
    ICAAccountType[ICAAccountType["DELEGATION"] = 0] = "DELEGATION";
    ICAAccountType[ICAAccountType["FEE"] = 1] = "FEE";
    ICAAccountType[ICAAccountType["WITHDRAWAL"] = 2] = "WITHDRAWAL";
    ICAAccountType[ICAAccountType["REDEMPTION"] = 3] = "REDEMPTION";
    ICAAccountType[ICAAccountType["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(ICAAccountType = exports.ICAAccountType || (exports.ICAAccountType = {}));
function iCAAccountTypeFromJSON(object) {
    switch (object) {
        case 0:
        case "DELEGATION":
            return ICAAccountType.DELEGATION;
        case 1:
        case "FEE":
            return ICAAccountType.FEE;
        case 2:
        case "WITHDRAWAL":
            return ICAAccountType.WITHDRAWAL;
        case 3:
        case "REDEMPTION":
            return ICAAccountType.REDEMPTION;
        case -1:
        case "UNRECOGNIZED":
        default:
            return ICAAccountType.UNRECOGNIZED;
    }
}
exports.iCAAccountTypeFromJSON = iCAAccountTypeFromJSON;
function iCAAccountTypeToJSON(object) {
    switch (object) {
        case ICAAccountType.DELEGATION:
            return "DELEGATION";
        case ICAAccountType.FEE:
            return "FEE";
        case ICAAccountType.WITHDRAWAL:
            return "WITHDRAWAL";
        case ICAAccountType.REDEMPTION:
            return "REDEMPTION";
        case ICAAccountType.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.iCAAccountTypeToJSON = iCAAccountTypeToJSON;
//# sourceMappingURL=ica_account.js.map